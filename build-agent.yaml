apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: slave
    jenkins/label: build-agent
    kubernetes.jenkins.io/controller: s-operator-http-jenkins_jenkins-1_svc_cluster_local_8080x
  name: build-agent
  namespace: jenkins-lts
spec:
  hostAliases:
    - ip: "10.8.30.9"
      hostnames:
        - "gitlab.serverless-iks-get.gitlab.com"
    - ip: "10.8.30.9"
      hostnames:
        - "image-registry-harbor-registry.iks-get-new.harbor.com"
  imagePullSecrets:
    - name: docker-hub-secret
  containers:
    - args:
        - infinity
      command:
        - sleep
      image: golang:1.20
      imagePullPolicy: IfNotPresent
      name: golang
      resources:
        requests:
          cpu: "750m"
          memory: "300Mi"
        limits:
          cpu: "1500m"
          memory: "600Mi"
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /home/jenkins/agent
          name: workspace-volume
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-jqh9w
          readOnly: true		  
      workingDir: /home/jenkins/agent
    - image: jenkins/inbound-agent:latest
      imagePullPolicy: IfNotPresent
      name: jnlp
      resources:
        requests:
          cpu: "500m"
          memory: "200Mi"
        limits:
          cpu: "1000m"
          memory: "400Mi"
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /home/jenkins/agent
          name: workspace-volume
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-jqh9w
          readOnly: true
      workingDir: /home/jenkins/agent
    - image: docker:20.10.24-dind
      imagePullPolicy: IfNotPresent
      name: docker
      resources:
        requests:
          cpu: "250m"
          memory: "75Mi"
        limits:
          cpu: "500m"
          memory: "150Mi"
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /home/jenkins/agent
          name: workspace-volume
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-jqh9w
          readOnly: true	  
        - mountPath: /usr/local/share/ca-certificates
          readOnly: true
          name: image-registry-ca-volume		  
      workingDir: /home/jenkins/agent
    - name: kubectl
      image: joshendriks/alpine-k8s
      resources:
        requests:
          cpu: "150m"
          memory: "100Mi"
        limits:
          cpu: "300m"
          memory: "200Mi"
      command:
      - /bin/cat
      tty: true    
      securityContext:
        privileged: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - emptyDir: {}
      name: workspace-volume  
    - name: image-registry-ca-volume
      secret:
        secretName: image-registry-ca		  
    - name: kube-api-access-jqh9w
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace


